<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from com.skvare.inventory/xml/schema/CRM/Inventory/InventoryProductVariant.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:b5640fe85e8297ecf8c5eb786652cd1e)
 */
use CRM_Inventory_ExtensionUtil as E;

/**
 * Database access object for the InventoryProductVariant entity.
 */
class CRM_Inventory_DAO_InventoryProductVariant extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_inventory_product_variant';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique Inventory Product Variant ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * FK to Product
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_id;

  /**
   * Product listed price
   *
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $listed_price;

  /**
   * Product Current price
   *
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $current_price;

  /**
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_variant_sku_code;

  /**
   * Phone number linked with device.
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_variant_phone_number;

  /**
   * e.g IMEI (International Mobile Equipment Identity) number .
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_variant_unique_id;

  /**
   * Product Variant details.
   *
   * @var string|null
   *   (SQL type: text)
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_variant_details;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_disable;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_discontinued;

  /**
   * Packed Weight
   *
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $packed_weight;

  /**
   * Packed Height
   *
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $packed_height;

  /**
   * Packed Width
   *
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $packed_width;

  /**
   * Packed Depth
   *
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $packed_depth;

  /**
   * Battery backup time.
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_variant_battery;

  /**
   * Device Speed.
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_variant_speed;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $antenna;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $tether;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $powerbank;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $batteryless;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $network_4g;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $network_5g;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $has_sim;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $has_device;

  /**
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $warranty_type_id;

  /**
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $image_thumbnail;

  /**
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $image_actual;

  /**
   * Feet, pounds, and gallons are all examples of units of measure.
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $uom;

  /**
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_variant_status;

  /**
   * Optional Product.
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $replaced_product_id;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_serialize;

  /**
   * Membership ID Associated with product.
   *
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $membership_id;

  /**
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $warranty_start_date;

  /**
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $warranty_end_date;

  /**
   * Sales ID Associated with sales tables.
   *
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $sales_id;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_inventory_product_variant';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Inventory Product Variants') : E::ts('Inventory Product Variant');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'inventory_product_variant_id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique Inventory Product Variant ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.id',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'product_id' => [
          'name' => 'product_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Product ID'),
          'description' => E::ts('FK to Product'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.product_id',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'FKClassName' => 'CRM_Inventory_DAO_InventoryProduct',
          'html' => [
            'type' => 'EntityRef',
            'label' => E::ts("Inventory Product"),
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_listed_price' => [
          'name' => 'listed_price',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Listed Price'),
          'description' => E::ts('Product listed price'),
          'required' => TRUE,
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.listed_price',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Listed Price"),
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_current_price' => [
          'name' => 'current_price',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Current Price'),
          'description' => E::ts('Product Current price'),
          'required' => TRUE,
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.current_price',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Current Price"),
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_sku_code' => [
          'name' => 'product_variant_sku_code',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Product Variant SKU Code'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.product_variant_sku_code',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_variant_phone_number' => [
          'name' => 'product_variant_phone_number',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Phone Number'),
          'description' => E::ts('Phone number linked with device.'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.product_variant_phone_number',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_variant_unique_id' => [
          'name' => 'product_variant_unique_id',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Product Variant Unique ID'),
          'description' => E::ts('e.g IMEI (International Mobile Equipment Identity) number .'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.product_variant_unique_id',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_variant_details' => [
          'name' => 'product_variant_details',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => E::ts('Product Variant Details'),
          'description' => E::ts('Product Variant details.'),
          'rows' => 4,
          'cols' => 60,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.product_variant_details',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'TextArea',
          ],
          'add' => '5.63',
        ],
        'inventory_product_variant_is_disable' => [
          'name' => 'is_disable',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Disable'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.is_disable',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_is_discontinued' => [
          'name' => 'is_discontinued',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Discontinued'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.is_discontinued',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_weight' => [
          'name' => 'packed_weight',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Packed Weight'),
          'description' => E::ts('Packed Weight'),
          'required' => FALSE,
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.packed_weight',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Packed Weight"),
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_height' => [
          'name' => 'packed_height',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Packed Height'),
          'description' => E::ts('Packed Height'),
          'required' => FALSE,
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.packed_height',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Packed Height"),
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_width' => [
          'name' => 'packed_width',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Packed Width'),
          'description' => E::ts('Packed Width'),
          'required' => FALSE,
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.packed_width',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Packed Width"),
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_depth' => [
          'name' => 'packed_depth',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Packed Depth'),
          'description' => E::ts('Packed Depth'),
          'required' => FALSE,
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.packed_depth',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Packed Depth"),
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_battery' => [
          'name' => 'product_variant_battery',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Product Battery'),
          'description' => E::ts('Battery backup time.'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.product_variant_battery',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_variant_speed' => [
          'name' => 'product_variant_speed',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Product Speed'),
          'description' => E::ts('Device Speed.'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.product_variant_speed',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_antenna' => [
          'name' => 'antenna',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Antenna'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.antenna',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_tether' => [
          'name' => 'tether',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Tether'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.tether',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_powerbank' => [
          'name' => 'powerbank',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Power Bank'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.powerbank',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_batteryless' => [
          'name' => 'batteryless',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Battery Less'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.batteryless',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_network_4g' => [
          'name' => 'network_4g',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Network 4g'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.network_4g',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_network_5g' => [
          'name' => 'network_5g',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Network 5g'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.network_5g',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_has_sim' => [
          'name' => 'has_sim',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Has SIM'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.has_sim',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_has_device' => [
          'name' => 'has_device',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Has Device'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.has_device',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_warranty_type_id' => [
          'name' => 'warranty_type_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Warranty Type'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.warranty_type_id',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_thumbnail' => [
          'name' => 'image_thumbnail',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Thumbnail Image'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => 30,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.image_thumbnail',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'File',
            'label' => E::ts("Thumbnail Image"),
          ],
          'add' => '5.63',
        ],
        'inventory_product_variant_image' => [
          'name' => 'image_actual',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Image'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => 30,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.image_actual',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'File',
            'label' => E::ts("Image"),
          ],
          'add' => '5.63',
        ],
        'inventory_product_variant_uom' => [
          'name' => 'uom',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Unit of Measure'),
          'description' => E::ts('Feet, pounds, and gallons are all examples of units of measure.'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.uom',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_variant_status' => [
          'name' => 'product_variant_status',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Product Status'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.product_variant_status',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'replaced_product_id' => [
          'name' => 'replaced_product_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Replaced Product ID'),
          'description' => E::ts('Optional Product.'),
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.replaced_product_id',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'FKClassName' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'html' => [
            'type' => 'EntityRef',
            'label' => E::ts("Replaced Product"),
          ],
          'add' => NULL,
        ],
        'inventory_product_is_serialize' => [
          'name' => 'is_serialize',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Serialized'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product_variant.is_serialize',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_membership_id' => [
          'name' => 'membership_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Membership ID'),
          'description' => E::ts('Membership ID Associated with product.'),
          'required' => FALSE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.membership_id',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'FKClassName' => 'CRM_Member_DAO_Membership',
          'html' => [
            'type' => 'EntityRef',
            'label' => E::ts("Membership ID"),
          ],
          'add' => '5.63',
        ],
        'inventory_product_warranty_start_date' => [
          'name' => 'warranty_start_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Warranty Start Date'),
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.warranty_start_date',
          'headerPattern' => '/warranty(.?date)?/i',
          'dataPattern' => '/^\d{4}-?\d{2}-?\d{2} ?(\d{2}:?\d{2}:?(\d{2})?)?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'formatType' => 'activityDateTime',
          ],
          'add' => NULL,
        ],
        'inventory_product_warranty_end_date' => [
          'name' => 'warranty_end_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Warranty End Date'),
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.warranty_end_date',
          'headerPattern' => '/warranty(.?date)?/i',
          'dataPattern' => '/^\d{4}-?\d{2}-?\d{2} ?(\d{2}:?\d{2}:?(\d{2})?)?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'formatType' => 'activityDateTime',
          ],
          'add' => NULL,
        ],
        'inventory_product_sales_id' => [
          'name' => 'sales_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Sales ID'),
          'description' => E::ts('Sales ID Associated with sales tables.'),
          'required' => FALSE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product_variant.sales_id',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product_variant',
          'entity' => 'InventoryProductVariant',
          'bao' => 'CRM_Inventory_DAO_InventoryProductVariant',
          'localizable' => 0,
          'FKClassName' => 'CRM_Inventory_DAO_InventorySales',
          'html' => [
            'type' => 'EntityRef',
            'label' => E::ts("Sales ID"),
          ],
          'add' => '5.63',
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'inventory_product_variant', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'inventory_product_variant', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
