<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from com.skvare.inventory/xml/schema/CRM/Inventory/InventoryProduct.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:d410acd33e19a052c1eacbd2aeb8bec6)
 */
use CRM_Inventory_ExtensionUtil as E;

/**
 * Database access object for the InventoryProduct entity.
 */
class CRM_Inventory_DAO_InventoryProduct extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_inventory_product';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique InventoryProduct ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * Product Code SKU.
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_code;

  /**
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $external_code;

  /**
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_name;

  /**
   * @var string
   *   (SQL type: varchar(512))
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_description;

  /**
   * The amount that is shown to the user.
   *
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $listed_price;

  /**
   * The fair market value of this item.
   *
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $current_price;

  /**
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_brand;

  /**
   * Product details.
   *
   * @var string|null
   *   (SQL type: text)
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_note;

  /**
   * FK to Category
   *
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_category_id;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_discontinued;

  /**
   * File url.
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $image_actual;

  /**
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $image_thumbnail;

  /**
   * Packed Weight
   *
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $packed_weight;

  /**
   * Packed Height
   *
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $packed_height;

  /**
   * Packed Width
   *
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $packed_width;

  /**
   * Packed Depth
   *
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $packed_depth;

  /**
   * Battery backup time.
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_variant_battery;

  /**
   * Device Speed.
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_variant_speed;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $antenna;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $tether;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $powerbank;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $batteryless;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $network_4g;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $network_5g;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $has_sim;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $has_device;

  /**
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $warranty_type_id;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_serialize;

  /**
   * Feet, pounds, and gallons are all examples of units of measure.
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $uom;

  /**
   * Screen sizde details.
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $screen;

  /**
   * Product Memory size.
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $memory;

  /**
   * Product Color.
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $color;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_active;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $premium_is_optional;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $premium_needs_address;

  /**
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $premium_shirt_count;

  /**
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $premium_device_count;

  /**
   * FK to Warehouse
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $warehouse_id;

  /**
   * The quantity on hand.
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $quantity_available;

  /**
   * The minimum number of units required to ensure no shortages occur at this warehouse.
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $minimum_quantity_stock_level;

  /**
   * The maximum number of units desired in stock, i.e. to avoid overstocking.
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $maximum_quantity_stock_level;

  /**
   * The minimum number of units required to ensure no shortages occur at this warehouse.
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $reorder_point;

  /**
   * Use to locate the item in warehouse
   *
   * @var string
   *   (SQL type: varchar(256))
   *   Note that values will be retrieved from the database as a string.
   */
  public $row;

  /**
   * Use to locate the item in warehouse
   *
   * @var string
   *   (SQL type: varchar(256))
   *   Note that values will be retrieved from the database as a string.
   */
  public $shelf;

  /**
   * Controls display sort order.
   *
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $weight;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_inventory_product';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Inventory Products') : E::ts('Inventory Product');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'inventory_product_id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique InventoryProduct ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.id',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'inventory_product_code' => [
          'name' => 'product_code',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Product Code'),
          'description' => E::ts('Product Code SKU.'),
          'required' => TRUE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.product_code',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_external_code' => [
          'name' => 'external_code',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('External Code'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.external_code',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_name' => [
          'name' => 'product_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Product Name'),
          'required' => TRUE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.product_name',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_description' => [
          'name' => 'product_description',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Product Description'),
          'required' => FALSE,
          'maxlength' => 512,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.product_description',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_listed_price' => [
          'name' => 'listed_price',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Listed Price'),
          'description' => E::ts('The amount that is shown to the user.'),
          'required' => TRUE,
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.listed_price',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Listed Price"),
          ],
          'add' => NULL,
        ],
        'inventory_product_current_price' => [
          'name' => 'current_price',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Current Price'),
          'description' => E::ts('The fair market value of this item.'),
          'required' => TRUE,
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.current_price',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Current Price"),
          ],
          'add' => NULL,
        ],
        'inventory_product_brand' => [
          'name' => 'product_brand',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Product Brand'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.product_brand',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
            'label' => E::ts("Product Brand"),
          ],
          'pseudoconstant' => [
            'optionGroupName' => 'product_brand',
            'optionEditPath' => 'civicrm/admin/options/product_brand',
          ],
          'add' => '5.63',
        ],
        'inventory_product_note' => [
          'name' => 'product_note',
          'type' => CRM_Utils_Type::T_TEXT,
          'title' => E::ts('Product Note'),
          'description' => E::ts('Product details.'),
          'rows' => 4,
          'cols' => 60,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.product_note',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'TextArea',
          ],
          'add' => '5.63',
        ],
        'inventory_product_category_id' => [
          'name' => 'product_category_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Product Category'),
          'description' => E::ts('FK to Category'),
          'required' => TRUE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.product_category_id',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'FKClassName' => 'CRM_Inventory_DAO_InventoryCategory',
          'html' => [
            'type' => 'Number',
          ],
          'add' => NULL,
        ],
        'inventory_product_is_discontinued' => [
          'name' => 'is_discontinued',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Discontinued'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.is_discontinued',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_image' => [
          'name' => 'image_actual',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Image'),
          'description' => E::ts('File url.'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => 30,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.image_actual',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'File',
            'label' => E::ts("Image"),
          ],
          'add' => '5.63',
        ],
        'inventory_product_thumbnail' => [
          'name' => 'image_thumbnail',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Thumbnail Image'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => 30,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.image_thumbnail',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'File',
            'label' => E::ts("Thumbnail Image"),
          ],
          'add' => '5.63',
        ],
        'inventory_product_variant_weight' => [
          'name' => 'packed_weight',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Packed Weight'),
          'description' => E::ts('Packed Weight'),
          'required' => FALSE,
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.packed_weight',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Packed Weight"),
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_height' => [
          'name' => 'packed_height',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Packed Height'),
          'description' => E::ts('Packed Height'),
          'required' => FALSE,
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.packed_height',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Packed Height"),
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_width' => [
          'name' => 'packed_width',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Packed Width'),
          'description' => E::ts('Packed Width'),
          'required' => FALSE,
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.packed_width',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Packed Width"),
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_depth' => [
          'name' => 'packed_depth',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Packed Depth'),
          'description' => E::ts('Packed Depth'),
          'required' => FALSE,
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.packed_depth',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Packed Depth"),
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_battery' => [
          'name' => 'product_variant_battery',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Product Battery'),
          'description' => E::ts('Battery backup time.'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.product_variant_battery',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_variant_speed' => [
          'name' => 'product_variant_speed',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Product Speed'),
          'description' => E::ts('Device Speed.'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.product_variant_speed',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_antenna' => [
          'name' => 'antenna',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Antenna'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.antenna',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_tether' => [
          'name' => 'tether',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Tether'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.tether',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_powerbank' => [
          'name' => 'powerbank',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Power Bank'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.powerbank',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_batteryless' => [
          'name' => 'batteryless',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Battery Less'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.batteryless',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_network_4g' => [
          'name' => 'network_4g',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Network 4g'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.network_4g',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_network_5g' => [
          'name' => 'network_5g',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Network 5g'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.network_5g',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_has_sim' => [
          'name' => 'has_sim',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Has SIM'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.has_sim',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_has_device' => [
          'name' => 'has_device',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Has Device'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.has_device',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_warranty_type_id' => [
          'name' => 'warranty_type_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Warranty Type'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.warranty_type_id',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'add' => NULL,
        ],
        'inventory_product_is_serialize' => [
          'name' => 'is_serialize',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Serialized'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.is_serialize',
          'export' => TRUE,
          'default' => '1',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_variant_uom' => [
          'name' => 'uom',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Unit of Measure'),
          'description' => E::ts('Feet, pounds, and gallons are all examples of units of measure.'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.uom',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_screen' => [
          'name' => 'screen',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Screen'),
          'description' => E::ts('Screen sizde details.'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.screen',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_memory' => [
          'name' => 'memory',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Memory'),
          'description' => E::ts('Product Memory size.'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.memory',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_color' => [
          'name' => 'color',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Color'),
          'description' => E::ts('Product Color.'),
          'required' => FALSE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.color',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'inventory_product_is_active' => [
          'name' => 'is_active',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Active'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.is_active',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_premium_is_optional' => [
          'name' => 'premium_is_optional',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Premium: Is Optional'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.premium_is_optional',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_premium_needs_address' => [
          'name' => 'premium_needs_address',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Premium: Need Address'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.premium_needs_address',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_product_premium_shirt_count' => [
          'name' => 'premium_shirt_count',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Premium:Shirt Count'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.premium_shirt_count',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'add' => NULL,
        ],
        'inventory_product_premium_device_count' => [
          'name' => 'premium_device_count',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Premium: Device Count'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.premium_device_count',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'add' => NULL,
        ],
        'warehouse_id' => [
          'name' => 'warehouse_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Warehouse ID'),
          'description' => E::ts('FK to Warehouse'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.warehouse_id',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'FKClassName' => 'CRM_Inventory_DAO_InventoryWarehouse',
          'html' => [
            'type' => 'Select',
            'label' => E::ts("Warehouse"),
          ],
          'pseudoconstant' => [
            'table' => 'civicrm_inventory_warehouse',
            'keyColumn' => 'id',
            'labelColumn' => 'name',
          ],
          'add' => NULL,
        ],
        'inventory_product_quantity_available' => [
          'name' => 'quantity_available',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Quantity Available'),
          'description' => E::ts('The quantity on hand.'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.quantity_available',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
            'label' => E::ts("Quantity Available"),
          ],
          'add' => NULL,
        ],
        'inventory_product_minimum_quantity_stock_level' => [
          'name' => 'minimum_quantity_stock_level',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Minimum Stock Level'),
          'description' => E::ts('The minimum number of units required to ensure no shortages occur at this warehouse.'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.minimum_quantity_stock_level',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
            'label' => E::ts("Minimum Stock Level"),
          ],
          'add' => NULL,
        ],
        'inventory_product_maximum_quantity_stock_level' => [
          'name' => 'maximum_quantity_stock_level',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Maximum Stock Level'),
          'description' => E::ts('The maximum number of units desired in stock, i.e. to avoid overstocking.'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.maximum_quantity_stock_level',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
            'label' => E::ts("Maximum Stock Level"),
          ],
          'add' => NULL,
        ],
        'inventory_product_reorder_point' => [
          'name' => 'reorder_point',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ReOrder Point'),
          'description' => E::ts('The minimum number of units required to ensure no shortages occur at this warehouse.'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.reorder_point',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
            'label' => E::ts("ReOrder Point"),
          ],
          'add' => NULL,
        ],
        'inventory_produt_warehouse_row' => [
          'name' => 'row',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Row in Warehouse'),
          'description' => E::ts('Use to locate the item in warehouse'),
          'required' => FALSE,
          'maxlength' => 256,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.row',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Row in Warehouse"),
          ],
          'add' => '5.63',
        ],
        'inventory_produt_warehouse_shelf' => [
          'name' => 'shelf',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Warehouse shelf'),
          'description' => E::ts('Use to locate the item in warehouse'),
          'required' => FALSE,
          'maxlength' => 256,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_product.shelf',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
            'label' => E::ts("Warehouse shelf"),
          ],
          'pseudoconstant' => [
            'optionGroupName' => 'warehouse_shelf',
            'optionEditPath' => 'civicrm/admin/options/warehouse_shelf',
          ],
          'add' => '5.63',
        ],
        'weight' => [
          'name' => 'weight',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Order'),
          'description' => E::ts('Controls display sort order.'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_product.weight',
          'table_name' => 'civicrm_inventory_product',
          'entity' => 'InventoryProduct',
          'bao' => 'CRM_Inventory_DAO_InventoryProduct',
          'localizable' => 0,
          'add' => '5.75',
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'inventory_product', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'inventory_product', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
