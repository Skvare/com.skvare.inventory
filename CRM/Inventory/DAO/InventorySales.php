<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from com.skvare.inventory/xml/schema/CRM/Inventory/InventorySales.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:21c22cdd0dd69a80c784e3e55a5ed492)
 */
use CRM_Inventory_ExtensionUtil as E;

/**
 * Database access object for the InventorySales entity.
 */
class CRM_Inventory_DAO_InventorySales extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_inventory_sales';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique InventorySales ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * FK to Contact
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $contact_id;

  /**
   * Random and Unique ID Generated.
   *
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $code;

  /**
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $sale_date;

  /**
   * Contribution ID Associated with product.
   *
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $contribution_id;

  /**
   * Fair market value.
   *
   * @var float|string|null
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $value_amount;

  /**
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $updated_at;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_active;

  /**
   * Sales Status: 'placed', 'shipped', 'completed'
   *
   * @var string
   *   (SQL type: varchar(100))
   *   Note that values will be retrieved from the database as a string.
   */
  public $status_id;

  /**
   * FK to product
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $product_id;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_shipping_required;

  /**
   * FK to shipments
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $shipment_id;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_paid;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_fulfilled;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $needs_assignment;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $has_assignment;

  /**
   * @var bool|string
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_tracking_sent;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_inventory_sales';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Inventory Saleses') : E::ts('Inventory Sales');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('Unique InventorySales ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_sales.id',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'contact_id' => [
          'name' => 'contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Contact ID'),
          'description' => E::ts('FK to Contact'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_sales.contact_id',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Contact',
          'html' => [
            'type' => 'EntityRef',
            'label' => E::ts("Contact"),
          ],
          'add' => NULL,
        ],
        'inventory_sales_code' => [
          'name' => 'code',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Order ID'),
          'description' => E::ts('Random and Unique ID Generated.'),
          'required' => FALSE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_sales.code',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '5.63',
        ],
        'sale_date' => [
          'name' => 'sale_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Sale Date'),
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_sales.sale_date',
          'headerPattern' => '/sale(.?date)?/i',
          'dataPattern' => '/^\d{4}-?\d{2}-?\d{2} ?(\d{2}:?\d{2}:?(\d{2})?)?$/',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'formatType' => 'activityDateTime',
          ],
          'add' => NULL,
        ],
        'inventory_sales_contribution_id' => [
          'name' => 'contribution_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Contribution ID'),
          'description' => E::ts('Contribution ID Associated with product.'),
          'required' => FALSE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_sales.contribution_id',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contribute_DAO_Contribution',
          'html' => [
            'type' => 'EntityRef',
            'label' => E::ts("Contribution"),
          ],
          'add' => '5.63',
        ],
        'inventory_product_value_amount' => [
          'name' => 'value_amount',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Value Amount'),
          'description' => E::ts('Fair market value.'),
          'precision' => [
            20,
            2,
          ],
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_sales.value_amount',
          'dataPattern' => '/^\d+(\.\d{2})?$/',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
            'label' => E::ts("Fair Amount"),
          ],
          'add' => NULL,
        ],
        'inventory_sales_updated_at' => [
          'name' => 'updated_at',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Updated Date'),
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_sales.updated_at',
          'headerPattern' => '/created(.?date)?/i',
          'dataPattern' => '/^\d{4}-?\d{2}-?\d{2} ?(\d{2}:?\d{2}:?(\d{2})?)?$/',
          'export' => TRUE,
          'default' => 'CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'formatType' => 'activityDateTime',
          ],
          'add' => NULL,
        ],
        'inventory_sales_is_active' => [
          'name' => 'is_active',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Active'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_sales.is_active',
          'export' => TRUE,
          'default' => '1',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_sales_status_id' => [
          'name' => 'status_id',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Sales Status'),
          'description' => E::ts('Sales Status: \'placed\', \'shipped\', \'completed\''),
          'required' => TRUE,
          'maxlength' => 100,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => TRUE,
            'export' => TRUE,
            'duplicate_matching' => TRUE,
            'token' => FALSE,
          ],
          'import' => TRUE,
          'where' => 'civicrm_inventory_sales.status_id',
          'export' => TRUE,
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
            'label' => E::ts("Sales Status"),
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_Inventory_Utils::productSalesStatus',
          ],
          'add' => '5.63',
        ],
        'product_id' => [
          'name' => 'product_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Model ID'),
          'description' => E::ts('FK to product'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_sales.product_id',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'FKClassName' => 'CRM_Inventory_DAO_InventoryProduct',
          'html' => [
            'type' => 'EntityRef',
            'label' => E::ts("Product/Model"),
          ],
          'add' => NULL,
        ],
        'inventory_sales_is_shipping_required' => [
          'name' => 'is_shipping_required',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Shipping Required'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_sales.is_shipping_required',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'shipment_id' => [
          'name' => 'shipment_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Shipment ID'),
          'description' => E::ts('FK to shipments'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_sales.shipment_id',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'FKClassName' => 'CRM_Inventory_DAO_InventoryShipment',
          'html' => [
            'type' => 'EntityRef',
            'label' => E::ts("Shipment"),
          ],
          'add' => NULL,
        ],
        'inventory_sales_is_paid' => [
          'name' => 'is_paid',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Paid'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_sales.is_paid',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_sales_is_fulfilled' => [
          'name' => 'is_fulfilled',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is fulfilled'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_sales.is_fulfilled',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_sales_needs_assignment' => [
          'name' => 'needs_assignment',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Needs Assignment'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_sales.needs_assignment',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_sales_has_assignment' => [
          'name' => 'has_assignment',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Has Assignment'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_sales.has_assignment',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'inventory_sales_is_tracking_sent' => [
          'name' => 'is_tracking_sent',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Tracking Sent?'),
          'required' => FALSE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_inventory_sales.is_tracking_sent',
          'export' => TRUE,
          'default' => '0',
          'table_name' => 'civicrm_inventory_sales',
          'entity' => 'InventorySales',
          'bao' => 'CRM_Inventory_DAO_InventorySales',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'inventory_sales', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'inventory_sales', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [
      'UI_code' => [
        'name' => 'UI_code',
        'field' => [
          0 => 'code',
        ],
        'localizable' => FALSE,
        'unique' => TRUE,
        'sig' => 'civicrm_inventory_sales::1::code',
      ],
    ];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
