<?php

use CRM_Inventory_ExtensionUtil as E;

return [
  // Saved Search for Inventory_Product_List.
  [
    'name' => 'SavedSearch_Inventory_Product_List',
    'entity' => 'SavedSearch',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_List',
        'label' => E::ts('Inventory Product List'),
        'api_entity' => 'InventoryProduct',
        'api_params' => [
          'version' => 4,
          "select" => [
            "id",
            "label",
            "is_active",
            "product_code",
            "product_category_id:label",
            "product_brand:label",
            "warranty_type_id:label",
          ],
          'orderBy' => [
            'weight DESC',
          ],
          "where" => [
            [
              "is_serialize",
              "=",
              TRUE,
            ],
          ],
          "groupBy" => [],
          "join" => [],
          "having" => [],
        ],
      ],
      'match' => [
        'name',
      ],
    ],
  ],
  // Search Display for Inventory_Product_List.
  [
    'name' => 'SearchDisplay_Inventory_Product_List_Table_1',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_List_Table_1',
        'label' => E::ts('Inventory Product List Table'),
        'saved_search_id.name' => 'Inventory_Product_List',
        'type' => 'table',
        "settings" => [
          "description" => NULL,
          "sort" => [],
          "limit" => 50,
          "pager" => [],
          "placeholder" => 5,
          "columns" => [
            [
              "type" => "field",
              "key" => "label",
              "dataType" => "String",
              "label" => "Product Name",
              "sortable" => TRUE,
            ],
            [
              "type" => "field",
              "key" => "is_active",
              "dataType" => "Boolean",
              "label" => "Is Active",
              "sortable" => TRUE,
            ],
            [
              "type" => "field",
              "key" => "product_code",
              "dataType" => "String",
              "label" => "Product Code",
              "sortable" => TRUE,
            ],
            [
              "type" => "field",
              "key" => "product_category_id:label",
              "dataType" => "Integer",
              "label" => "Product Category",
              "sortable" => TRUE,
            ],
            [
              "type" => "field",
              "key" => "product_brand:label",
              "dataType" => "String",
              "label" => "Product Brand",
              "sortable" => TRUE,
            ],
            [
              "type" => "field",
              "key" => "warranty_type_id:label",
              "dataType" => "Integer",
              "label" => "Warranty Type",
              "sortable" => TRUE,
            ],
            [
              "text" => "",
              "style" => "info-outline",
              "size" => "btn-xs",
              "icon" => "fa-bars",
              "links" => [
                [
                  "path" => "civicrm/inventory/device-model#?InventoryProduct1=[id]",
                  "icon" => "fa-external-link",
                  "text" => "Edit",
                  "style" => "default",
                  "condition" => [
                    "check user permission",
                    "=",
                    [
                      "edit inventory product",
                    ],
                  ],
                  "task" => "",
                  "entity" => "",
                  "action" => "",
                  "join" => "",
                  "target" => "crm-popup",
                ],
                [
                  "task" => "delete",
                  "entity" => "InventoryProduct",
                  "join" => "",
                  "target" => "crm-popup",
                  "icon" => "fa-trash",
                  "text" => "Delete Model",
                  "style" => "danger",
                  "path" => "",
                  "action" => "",
                  "condition" => [
                    "check user permission",
                    "=",
                    [
                      "edit inventory product",
                      "delete inventory product",
                    ],
                  ],
                ],
                [
                  "task" => "disable",
                  "entity" => "InventoryProduct",
                  "join" => "",
                  "target" => "crm-popup",
                  "icon" => "fa-toggle-off",
                  "text" => "Disable Model",
                  "style" => "default",
                  "path" => "",
                  "action" => "",
                  "condition" => [
                    "check user permission",
                    "=",
                    [
                      "edit inventory product",
                    ],
                  ],
                ],
                [
                  "task" => "enable",
                  "entity" => "InventoryProduct",
                  "join" => "",
                  "target" => "crm-popup",
                  "icon" => "fa-toggle-on",
                  "text" => "Enable Model",
                  "style" => "default",
                  "path" => "",
                  "action" => "",
                  "condition" => [
                    "check user permission",
                    "=",
                    [
                      "edit inventory product",
                    ],
                  ],
                ],
                [
                  "task" => "update",
                  "entity" => "InventoryProduct",
                  "join" => "",
                  "target" => "crm-popup",
                  "icon" => "fa-save",
                  "text" => "Update Model",
                  "style" => "default",
                  "path" => "",
                  "action" => "",
                  "condition" => [
                    "check user permission",
                    "=",
                    [
                      "edit inventory product",
                    ],
                  ],
                ],
              ],
              "type" => "menu",
              "alignment" => "text-right",
              "label" => "Action",
            ],
          ],
          "actions" => TRUE,
          "classes" => [
            "table",
            "table-striped",
            "table-bordered",
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],
  // Saved Search for Inventory_Product_Variant.
  [
    'name' => 'SavedSearch_Inventory_Product_Variant',
    'entity' => 'SavedSearch',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Variant',
        'label' => E::ts('Inventory Product Variant'),
        'api_entity' => 'InventoryProductVariant',
        'api_params' => [
          'version' => 4,
          'select' => [
            'id',
            'product_id',
            'InventoryProductVariant_InventoryProduct_product_id_01.label',
            'contact_id',
            'InventoryProductVariant_Contact_contact_id_01.sort_name',
            'membership_id',
            'InventoryProductVariant_Membership_membership_id_01.membership_type_id:label',
            'product_variant_phone_number',
            'status:label',
            'product_variant_unique_id',
            'is_active',
            'is_suspended',
            'created_at',
            'updated_at',
            'warranty_start_date',
            'warranty_end_date',
            'shipped_on',
            'expire_on',
          ],
          'orderBy' => [
            'weight DESC',
          ],
          "where" => [
            [
              "InventoryProductVariant_InventoryProduct_product_id_01.is_serialize",
              "=",
              TRUE,
            ],
          ],
          "groupBy" => [],
          "join" => [
            [
              "Contact AS InventoryProductVariant_Contact_contact_id_01",
              "LEFT",
              [
                "contact_id",
                "=",
                "InventoryProductVariant_Contact_contact_id_01.id",
              ],
            ],
            [
              "InventoryProduct AS InventoryProductVariant_InventoryProduct_product_id_01",
              "INNER",
              [
                "product_id",
                "=",
                "InventoryProductVariant_InventoryProduct_product_id_01.id",
              ],
              [
                "InventoryProductVariant_InventoryProduct_product_id_01.is_serialize",
                "=",
                TRUE,
              ],
            ],
            [
              "Membership AS InventoryProductVariant_Membership_membership_id_01",
              "LEFT",
              [
                "membership_id",
                "=",
                "InventoryProductVariant_Membership_membership_id_01.id",
              ],
            ],
            [
              "MembershipType AS InventoryProductVariant_Membership_membership_id_01_Membership_MembershipType_membership_type_id_01",
              "LEFT",
              [
                "InventoryProductVariant_Membership_membership_id_01.membership_type_id",
                "=",
                "InventoryProductVariant_Membership_membership_id_01_Membership_MembershipType_membership_type_id_01.id",
              ],
            ],
          ],
          "having" => [],
        ],
      ],
      'match' => [
        'name',
      ],
    ],
  ],
  // Search Display for Inventory_Product_Variant.
  [
    'name' => 'SearchDisplay_Inventory_Product_Variant_Table_1',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Variant_Table_1',
        'label' => 'Inventory Product List Table',
        'saved_search_id.name' => 'Inventory_Product_Variant',
        'type' => 'table',
        "settings" => [
          "description" => NULL,
          "sort" => [],
          "limit" => 50,
          "pager" => [],
          "placeholder" => 5,
          'columns' => [
            [
              'type' => 'field',
              'key' => 'InventoryProductVariant_InventoryProduct_product_id_01.label',
              'dataType' => 'String',
              'label' => E::ts('Product Name'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'InventoryProductVariant_Contact_contact_id_01.sort_name',
              'dataType' => 'String',
              'label' => E::ts('Contact Name'),
              'sortable' => TRUE,
              'link' => [
                'path' => '',
                'entity' => 'Contact',
                'action' => 'view',
                'join' => 'InventoryProductVariant_Contact_contact_id_01',
                'target' => '',
              ],
              'title' => E::ts('View Inventory Product Variant Contact'),
            ],
            [
              'type' => 'field',
              'key' => 'InventoryProductVariant_Membership_membership_id_01.membership_type_id:label',
              'dataType' => 'Integer',
              'label' => E::ts('Membership Type'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'product_variant_phone_number',
              'dataType' => 'String',
              'label' => E::ts('Phone Number'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'status:label',
              'dataType' => 'String',
              'label' => E::ts('Product Status'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'product_variant_unique_id',
              'dataType' => 'String',
              'label' => E::ts('IMEI'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'is_active',
              'dataType' => 'Boolean',
              'label' => E::ts('Is Active'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'is_suspended',
              'dataType' => 'Boolean',
              'label' => E::ts('Is Suspended'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'created_at',
              'dataType' => 'Timestamp',
              'label' => E::ts('Created Date'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'updated_at',
              'dataType' => 'Timestamp',
              'label' => E::ts('Updated Date'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'warranty_start_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Warranty start on'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'warranty_end_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Warranty end on'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'shipped_on',
              'dataType' => 'Timestamp',
              'label' => E::ts('Shipped on'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'expire_on',
              'dataType' => 'Timestamp',
              'label' => E::ts('Expire On'),
              'sortable' => TRUE,
            ],
            [
              'text' => '',
              'style' => 'default',
              'size' => 'btn-xs',
              'icon' => 'fa-bars',
              'links' => [
                [
                  'path' => '/civicrm/inventory/device-from#?InventoryProductVariant1=[id]',
                  'icon' => 'fa-external-link',
                  'text' => E::ts('Edit'),
                  'style' => 'default',
                  'condition' => [
                    'check user permission',
                    '=',
                    [
                      'edit inventory product',
                    ],
                  ],
                  'task' => '',
                  'entity' => '',
                  'action' => '',
                  'join' => '',
                  'target' => 'crm-popup',
                ],
                [
                  'entity' => 'Contact',
                  'action' => 'view',
                  'join' => 'InventoryProductVariant_Contact_contact_id_01',
                  'target' => '',
                  'icon' => 'fa-external-link',
                  'text' => E::ts('View Contact'),
                  'style' => 'default',
                  'path' => '',
                  'task' => '',
                  'condition' => [],
                ],
                [
                  'entity' => 'Contact',
                  'action' => 'update',
                  'join' => 'InventoryProductVariant_Contact_contact_id_01',
                  'target' => '',
                  'icon' => 'fa-pencil',
                  'text' => E::ts('Update Contact'),
                  'style' => 'default',
                  'path' => '',
                  'task' => '',
                  'condition' => [],
                ],
                [
                  'entity' => 'Membership',
                  'action' => 'view',
                  'join' => 'InventoryProductVariant_Membership_membership_id_01',
                  'target' => 'crm-popup',
                  'icon' => 'fa-external-link',
                  'text' => E::ts('View Membership'),
                  'style' => 'default',
                  'path' => '',
                  'task' => '',
                  'condition' => [],
                ],
                [
                  'entity' => 'Membership',
                  'action' => 'update',
                  'join' => 'InventoryProductVariant_Membership_membership_id_01',
                  'target' => 'crm-popup',
                  'icon' => 'fa-pencil',
                  'text' => E::ts('Update Membership'),
                  'style' => 'default',
                  'path' => '',
                  'task' => '',
                  'condition' => [],
                ],
                [
                  'entity' => 'Membership',
                  'action' => 'renew',
                  'join' => 'InventoryProductVariant_Membership_membership_id_01',
                  'target' => 'crm-popup',
                  'icon' => 'fa-external-link',
                  'text' => E::ts('Renew Membership'),
                  'style' => 'default',
                  'path' => '',
                  'task' => '',
                  'condition' => [],
                ],
                [
                  'task' => 'disable',
                  'entity' => 'InventoryProductVariant',
                  'join' => '',
                  'target' => 'crm-popup',
                  'icon' => 'fa-toggle-off',
                  'text' => E::ts('Disable Product'),
                  'style' => 'default',
                  'path' => '',
                  'action' => '',
                  'condition' => [
                    'check user permission',
                    '=',
                    [
                      'edit inventory product',
                    ],
                  ],
                ],
                [
                  'task' => 'enable',
                  'entity' => 'InventoryProductVariant',
                  'join' => '',
                  'target' => 'crm-popup',
                  'icon' => 'fa-toggle-on',
                  'text' => E::ts('Enable Product'),
                  'style' => 'default',
                  'path' => '',
                  'action' => '',
                  'condition' => [
                    'check user permission',
                    '=',
                    [
                      'edit inventory product',
                    ],
                  ],
                ],
                [
                  'task' => 'update',
                  'entity' => 'InventoryProductVariant',
                  'join' => '',
                  'target' => 'crm-popup',
                  'icon' => 'fa-save',
                  'text' => E::ts('Update Product'),
                  'style' => 'default',
                  'path' => '',
                  'action' => '',
                  'condition' => [
                    'check user permission',
                    '=',
                    [
                      'edit inventory product',
                    ],
                  ],
                ],
              ],
              'type' => 'menu',
              'alignment' => 'text-right',
            ],
          ],
          "actions" => TRUE,
          "classes" => [
            "table",
            "table-striped",
            "table-bordered",
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],

  // Saved Search for Membership_Type_Billing_Plans.
  [
    'name' => 'SavedSearch_Membership_Type_Billing_Plans',
    'entity' => 'SavedSearch',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Membership_Type_Billing_Plans',
        'label' => E::ts('Membership Type Billing Plans'),
        'api_entity' => 'InventoryBillingPlans',
        'api_params' => [
          'version' => 4,
          'select' => [
            'name',
            'is_active',
            'frequency_interval',
            'frequency_unit:label',
            'amount',
            'installments',
          ],
          'orderBy' => [],
          'where' => [],
          'groupBy' => [],
          'join' => [],
          'having' => [],
        ],
      ],
      'match' => [
        'name',
      ],
    ],
  ],
  // Search Display for Membership_Type_Billing_Plans.
  [
    'name' => 'SearchDisplay_Membership_Type_Billing_Plans_Table_1',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Membership_Type_Billing_Plans_Table_1',
        'label' => E::ts('Membership Type Billing Plans Table 1'),
        'saved_search_id.name' => 'Membership_Type_Billing_Plans',
        'type' => 'table',
        'settings' => [
          'description' => NULL,
          'sort' => [],
          'limit' => 50,
          'pager' => FALSE,
          'placeholder' => 5,
          'columns' => [
            [
              'type' => 'field',
              'key' => 'name',
              'dataType' => 'String',
              'label' => E::ts('Plan Name'),
              'sortable' => TRUE,
              'cssRules' => [
                [
                  'strikethrough',
                  'is_active',
                  '=',
                  FALSE,
                ],
              ],
            ],
            [
              'type' => 'field',
              'key' => 'amount',
              'dataType' => 'Money',
              'label' => E::ts('Amount'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'frequency_unit:label',
              'dataType' => 'String',
              'label' => E::ts('Frequency'),
              'sortable' => TRUE,
              'rewrite' => '{capture assign=frequency_unit}{"[frequency_unit:label]"}{/capture}{capture assign=installments}{"[installments]"}{/capture}{capture assign=frequency_interval}{"[frequency_interval]"}{/capture}Every {if $frequency_interval> 1}[frequency_interval]{/if} {$frequency_unit|upper} {if $installments} for {$installments} installments.{/if}
',
              'cssRules' => [
                [
                  'font-bold',
                  'is_active',
                  '=',
                  TRUE,
                ],
              ],
            ],
            [
              'type' => 'field',
              'key' => 'is_active',
              'dataType' => 'Boolean',
              'label' => E::ts('Is Active?'),
              'sortable' => TRUE,
              'rewrite' => '',
              'cssRules' => [
                [
                  'bg-success',
                  'is_active',
                  '=',
                  TRUE,
                ],
                [
                  'bg-danger',
                  'is_active',
                  '=',
                  FALSE,
                ],
              ],
            ],
            [
              'text' => '',
              'style' => 'default',
              'size' => 'btn-xs',
              'icon' => 'fa-bars',
              'links' => [
                [
                  'path' => 'civicrm/inventory/membership-billing-plan#?InventoryBillingPlans1=[id]',
                  'icon' => 'fa-external-link',
                  'text' => E::ts('Edit'),
                  'style' => 'default',
                  'condition' => [],
                  'task' => '',
                  'entity' => '',
                  'action' => '',
                  'join' => '',
                  'target' => 'crm-popup',
                ],
                [
                  'task' => 'disable',
                  'entity' => 'InventoryBillingPlans',
                  'join' => '',
                  'target' => 'crm-popup',
                  'icon' => 'fa-toggle-off',
                  'text' => E::ts('Disable'),
                  'style' => 'secondary',
                  'path' => '',
                  'action' => '',
                  'condition' => [],
                ],
                [
                  'task' => 'delete',
                  'entity' => 'InventoryBillingPlans',
                  'join' => '',
                  'target' => 'crm-popup',
                  'icon' => 'fa-trash',
                  'text' => E::ts('Delete'),
                  'style' => 'danger',
                  'path' => '',
                  'action' => '',
                  'condition' => [],
                ],
                [
                  'task' => 'enable',
                  'entity' => 'InventoryBillingPlans',
                  'join' => '',
                  'target' => 'crm-popup',
                  'icon' => 'fa-toggle-on',
                  'text' => E::ts('Enable'),
                  'style' => 'default',
                  'path' => '',
                  'action' => '',
                  'condition' => [],
                ],
              ],
              'type' => 'menu',
              'alignment' => 'text-right',
            ],
          ],
          'actions' => FALSE,
          'classes' => [
            'table',
            'table-striped',
            'table-bordered',
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],

  // Saved Search for Inventory_Product_Membership_List_For_Membership_Type
  [
    'name' => 'SavedSearch_Inventory_Product_Membership_List_For_Membership_Type',
    'entity' => 'SavedSearch',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Membership_List_For_Membership_Type',
        'label' => E::ts('Inventory Product Membership List For Membership Type'),
        'api_entity' => 'InventoryProductMembership',
        'api_params' => [
          'version' => 4,
          'select' => [
            'product_id.label',
            'is_product_serialize',
            'is_active',
          ],
          'orderBy' => [],
          'where' => [],
          'groupBy' => [],
          'join' => [],
          'having' => [],
        ],
      ],
      'match' => [
        'name',
      ],
    ],
  ],

  // Search Display for Inventory_Product_Membership_List_For_Membership_Type_Table_1.
  [
    'name' => 'SearchDisplay_Inventory_Product_Membership_List_For_Membership_Type_Table_1',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Membership_List_For_Membership_Type_Table_1',
        'label' => E::ts('Inventory Product Membership List For Membership Type Table 1'),
        'saved_search_id.name' => 'Inventory_Product_Membership_List_For_Membership_Type',
        'type' => 'table',
        'settings' => [
          'description' => NULL,
          'sort' => [],
          'limit' => 50,
          'pager' => FALSE,
          'placeholder' => 5,
          'columns' => [
            [
              'type' => 'field',
              'key' => 'product_id.label',
              'dataType' => 'String',
              'label' => E::ts('Product Name'),
              'sortable' => TRUE,
              'cssRules' => [
                [
                  'strikethrough',
                  'is_active',
                  '=',
                  FALSE,
                ],
              ],
            ],
            [
              'type' => 'field',
              'key' => 'is_product_serialize',
              'dataType' => 'Boolean',
              'label' => E::ts('Is Device?'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'is_active',
              'dataType' => 'Boolean',
              'label' => E::ts('Is Active?'),
              'sortable' => TRUE,
            ],
            [
              'text' => '',
              'style' => 'default',
              'size' => 'btn-xs',
              'icon' => 'fa-bars',
              'links' => [
                [
                  'path' => 'civicrm/inventory/device-model-membership#?InventoryProductMembership1=[id]',
                  'icon' => 'fa-external-link',
                  'text' => E::ts('Edit'),
                  'style' => 'default',
                  'condition' => [],
                  'task' => '',
                  'entity' => '',
                  'action' => '',
                  'join' => '',
                  'target' => 'crm-popup',
                ],
                [
                  'task' => 'disable',
                  'entity' => 'InventoryProductMembership',
                  'join' => '',
                  'target' => 'crm-popup',
                  'icon' => 'fa-toggle-off',
                  'text' => E::ts('Disable'),
                  'style' => 'default',
                  'path' => '',
                  'action' => '',
                  'condition' => [],
                ],
                [
                  'task' => 'enable',
                  'entity' => 'InventoryProductMembership',
                  'join' => '',
                  'target' => 'crm-popup',
                  'icon' => 'fa-toggle-on',
                  'text' => E::ts('Enable'),
                  'style' => 'default',
                  'path' => '',
                  'action' => '',
                  'condition' => [],
                ],
              ],
              'type' => 'menu',
              'alignment' => 'text-right',
            ],
          ],
          'actions' => FALSE,
          'classes' => [
            'table',
            'table-striped',
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],

  // Saved Search for Inventory_Batch.
  [
    'name' => 'SavedSearch_Inventory_Batch',
    'entity' => 'SavedSearch',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Batch',
        'label' => E::ts('Inventory Batch'),
        'api_entity' => 'InventoryBatch',
        'api_params' => [
          'version' => 4,
          'select' => [
            'id',
            'description',
            'created_date',
            'status_id:label',
            'name',
            'exported_date',
          ],
          'orderBy' => [
            'field (status_id:label, "Open", "Reopened", "Exported", "Closed", "Data Entry" )',
            'created_date DESC',
          ],
          "where" => [],
          "groupBy" => [],
          "join" => [],
          "having" => [],
        ],
      ],
      'match' => [
        'name',
      ],
    ],
  ],

  // Search Display for Inventory_Batch_Table_1.
  [
    'name' => 'SearchDisplay_Inventory_Batch_Table_1',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Batch_Table_1',
        'label' => E::ts('Inventory Batch Table 1'),
        'saved_search_id.name' => 'Inventory_Batch',
        'type' => 'table',
        'settings' => [
          'description' => NULL,
          'sort' => [],
          'limit' => 50,
          'pager' => FALSE,
          'placeholder' => 5,
          'columns' => [
            [
              'type' => 'field',
              'key' => 'created_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Created On'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'html',
              'key' => 'name',
              'dataType' => 'String',
              'label' => E::ts('Name'),
              'sortable' => TRUE,
              'rewrite' => '<a href="/civicrm/inventory/batch-change-log?batch_id=[id]#?batch_id=[id]">[name]</a>',
            ],
            [
              'type' => 'field',
              'key' => 'status_id:label',
              'dataType' => 'Integer',
              'label' => E::ts('Status'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'exported_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Export Date'),
              'sortable' => TRUE,
            ],
            [
              'text' => '',
              'style' => 'default',
              'size' => 'btn-xs',
              'icon' => 'fa-bars',
              'links' => [
                [
                  'path' => '',
                  'icon' => 'fa-trash',
                  'text' => E::ts('Delete Batch'),
                  'style' => 'danger',
                  'condition' => [],
                  'task' => 'delete',
                  'entity' => 'InventoryBatch',
                  'action' => '',
                  'join' => '',
                  'target' => 'crm-popup',
                ],
              ],
              'type' => 'menu',
              'alignment' => 'text-right',
            ],
          ],
          'actions' => TRUE,
          'classes' => [
            'table',
            'table-striped',
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],

  // Search Display for Inventory_Batch_Table_2.
  [
    'name' => 'SearchDisplay_Inventory_Batch_Table_2',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Batch_Table_2',
        'label' => E::ts('Inventory Batch Table 2'),
        'saved_search_id.name' => 'Inventory_Batch',
        'type' => 'table',
        'settings' => [
          'description' => NULL,
          'sort' => [],
          'pager' => FALSE,
          'placeholder' => 5,
          'columns' => [
            [
              'type' => 'field',
              'key' => 'created_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Created On'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'name',
              'dataType' => 'String',
              'label' => E::ts('Name'),
              'sortable' => TRUE,
              'rewrite' => '',
            ],
            [
              'type' => 'field',
              'key' => 'status_id:label',
              'dataType' => 'Integer',
              'label' => E::ts('Status'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'exported_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Export Date'),
              'sortable' => TRUE,
            ],
            [
              'text' => '',
              'style' => 'default',
              'size' => 'btn-xs',
              'icon' => 'fa-bars',
              'links' => [
                [
                  'path' => '',
                  'icon' => 'fa-trash',
                  'text' => E::ts('Delete Batch'),
                  'style' => 'danger',
                  'condition' => [],
                  'task' => 'delete',
                  'entity' => 'InventoryBatch',
                  'action' => '',
                  'join' => '',
                  'target' => 'crm-popup',
                ],
              ],
              'type' => 'menu',
              'alignment' => 'text-right',
            ],
          ],
          'actions' => FALSE,
          'classes' => [
            'table',
            'table-striped',
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],

  // Saved Search for Inventory_Product_Changelog.
  [
    'name' => 'SavedSearch_Inventory_Product_Changelog',
    'entity' => 'SavedSearch',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Changelog',
        'label' => E::ts('Inventory Product Changelog'),
        'api_entity' => 'InventoryProductChangelog',
        'api_params' => [
          'version' => 4,
          'select' => [
            'id',
            'created_date',
            'status_id:label',
            'InventoryProductChangelog_InventoryBatch_batch_id_01.status_id:label',
            'InventoryProductChangelog_InventoryProductVariant_product_variant_id_01.product_variant_unique_id',
            'InventoryProductChangelog_InventoryProductVariant_product_variant_id_01.contact_id.display_name',
          ],
          'orderBy' => [],
          "where" => [],
          "groupBy" => [],
          'join' => [
            [
              'InventoryBatch AS InventoryProductChangelog_InventoryBatch_batch_id_01',
              'INNER',
              [
                'batch_id',
                '=',
                'InventoryProductChangelog_InventoryBatch_batch_id_01.id',
              ],
            ],
            [
              'InventoryProductVariant AS InventoryProductChangelog_InventoryProductVariant_product_variant_id_01',
              'INNER',
              [
                'product_variant_id',
                '=',
                'InventoryProductChangelog_InventoryProductVariant_product_variant_id_01.id',
              ],
            ],
          ],
          "having" => [],
        ],
      ],
      'match' => [
        'name',
      ],
    ],
  ],

  // Search Display for Inventory_Product_Changelog_Table_1.
  [
    'name' => 'SearchDisplay_Inventory_Product_Changelog_Table_1',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Changelog_Table_1',
        'label' => E::ts('Inventory Product Changelog Table 1'),
        'saved_search_id.name' => 'Inventory_Product_Changelog',
        'type' => 'table',
        'settings' => [
          'description' => NULL,
          'sort' => [
            [
              'created_date',
              'DESC',
            ],
          ],
          'limit' => 50,
          'pager' => [],
          'placeholder' => 5,
          'columns' => [
            [
              'type' => 'field',
              'key' => 'created_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Created On'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'InventoryProductChangelog_InventoryProductVariant_product_variant_id_01.product_variant_unique_id',
              'dataType' => 'String',
              'label' => E::ts('Device'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'InventoryProductChangelog_InventoryProductVariant_product_variant_id_01.contact_id.display_name',
              'dataType' => 'String',
              'label' => E::ts('Member'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'status_id:label',
              'dataType' => 'String',
              'label' => E::ts('Change Request'),
              'sortable' => TRUE,
            ],
            [
              'text' => '',
              'style' => 'default',
              'size' => 'btn-xs',
              'icon' => 'fa-bars',
              'links' => [
                [
                  'path' => '',
                  'icon' => 'fa-trash',
                  'text' => E::ts('Delete Change Request'),
                  'style' => 'danger',
                  'condition' => [
                    'InventoryProductChangelog_InventoryBatch_batch_id_01.status_id:name',
                    'IN',
                    [
                      'Open',
                      'Reopened',
                    ],
                  ],
                  'task' => 'delete',
                  'entity' => 'InventoryProductChangelog',
                  'action' => '',
                  'join' => '',
                  'target' => 'crm-popup',
                ],
                [
                  'task' => 'update',
                  'entity' => 'InventoryProductChangelog',
                  'join' => '',
                  'target' => 'crm-popup',
                  'icon' => 'fa-save',
                  'text' => E::ts('Update Change Request'),
                  'style' => 'default',
                  'path' => '',
                  'action' => '',
                  'condition' => [
                    'InventoryProductChangelog_InventoryBatch_batch_id_01.status_id:name',
                    'IN',
                    [
                      'Open',
                      'Reopened',
                    ],
                  ],
                ],
              ],
              'type' => 'menu',
              'alignment' => 'text-right',
            ],
          ],
          'actions' => FALSE,
          'classes' => [
            'table',
            'table-striped',
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],

  // Saved Search for Inventory_Product_Contact_Tab.
  [
    'name' => 'SavedSearch_Inventory_Product_Contact_Tab',
    'entity' => 'SavedSearch',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Contact_Tab',
        'label' => E::ts('Inventory Product Contact Tab'),
        'api_entity' => 'InventoryProductVariant',
        'api_params' => [
          'version' => 4,
          'select' => [
            'id',
            'is_active',
            'created_at',
            'product_variant_unique_id',
            'is_discontinued',
            'is_primary',
            'is_problem',
            'is_suspended',
            'product_id.label',
            'status:label',
            'contact_id',
          ],
          'orderBy' => [],
          'where' => [],
          "groupBy" => [],
          'join' => [],
          "having" => [],
        ],
      ],
      'match' => [
        'name',
      ],
    ],
  ],

  // Search Display for Inventory_Product_Contact_Tab_Table_1.
  [
    'name' => 'SearchDisplay_Inventory_Product_Contact_Tab_Table_1',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Contact_Tab_Table_1',
        'label' => E::ts('Inventory Product Contact Tab Table 1'),
        'saved_search_id.name' => 'Inventory_Product_Contact_Tab',
        'type' => 'table',
        'settings' => [
          'description' => NULL,
          'sort' => [
            [
              'created_at',
              'DESC',
            ],
          ],
          'limit' => 50,
          'pager' => [],
          'placeholder' => 5,
          'columns' => [
            [
              'type' => 'field',
              'key' => 'product_id.label',
              'dataType' => 'String',
              'label' => E::ts('Model'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'created_at',
              'dataType' => 'Timestamp',
              'label' => E::ts('Created'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'product_variant_unique_id',
              'dataType' => 'String',
              'label' => E::ts('Identifier'),
              'sortable' => TRUE,
              'rewrite' => '',
            ],
            [
              'type' => 'html',
              'key' => 'is_active',
              'dataType' => 'Boolean',
              'label' => '',
              'sortable' => TRUE,
              'rewrite' => "{capture assign=is_active}{\"[is_active]\"}{/capture}\n{capture assign=is_problem}{\"[is_problem]\"}{/capture}\n{capture assign=is_suspended}{\"[is_suspended]\"}{/capture}\n{capture assign=is_primary}{\"[is_primary]\"}{/capture}\n{capture assign=is_replaced}{\"[is_replaced]\"}{/capture}\n{capture assign=is_discontinued}{\"[is_discontinued]\"}{/capture}\n{if \$is_primary == 'Yes'}\n<span class=\"badge badge-dark\">primary</span>\n{/if}\n{if \$is_active == 'Yes'}\n<span class=\"badge badge-success\">active</span>\n{/if}\n{if \$is_problem == 'Yes'}\n<span class=\"badge badge-danger\">problem</span>\n{/if}\n{if \$is_suspended == 'Yes'}\n<span class=\"badge badge-warning\">suspended</span>\n{/if}\n{if \$is_active == 'No' && \$is_suspended == 'Yes'}\n<span class=\"badge badge-warning\">terminated</span>\n{/if}\n{if \$is_replaced == 'Yes'}\n<span class=\"badge badge-dark\">replaced</span>\n{/if}",
            ],
            [
              'type' => 'field',
              'key' => 'status:label',
              'dataType' => 'String',
              'label' => E::ts('Status'),
              'sortable' => TRUE,
            ],
            [
              'text' => '',
              'style' => 'default',
              'size' => 'btn-xs',
              'icon' => 'fa-bars',
              'links' => [
                [
                  'path' => 'civicrm/contact/view/inventory-productvariant?action=view&reset=1&cid=[contact_id]&id=[id]#?id=[id]',
                  'icon' => 'fa-external-link',
                  'text' => E::ts('View'),
                  'style' => 'default',
                  'condition' => [],
                  'task' => '',
                  'entity' => '',
                  'action' => '',
                  'join' => '',
                  'target' => 'crm-popup',
                ],
                [
                  'path' => '/civicrm/inventory/device-from#?InventoryProductVariant1=[id]',
                  'icon' => 'fa-external-link',
                  'text' => E::ts('Edit'),
                  'style' => 'default',
                  'condition' => [],
                  'task' => '',
                  'entity' => '',
                  'action' => '',
                  'join' => '',
                  'target' => 'crm-popup',
                ],
              ],
              'type' => 'menu',
              'alignment' => 'text-right',
            ],
          ],
          'actions' => FALSE,
          'classes' => [
            'table',
            'table-striped',
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],

  // Saved Search for Inventory_Shipment.
  [
    'name' => 'SavedSearch_Inventory_Shipment',
    'entity' => 'SavedSearch',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Shipment',
        'label' => E::ts('Inventory Shipment'),
        'api_entity' => 'InventoryShipment',
        'api_params' => [
          'version' => 4,
          'select' => [
            'id',
            'contact_id',
            'contact_id.display_name',
            'created_date',
            'is_finished',
            'is_shipped',
            'shipped_date',
            'COUNT(InventoryShipment_InventorySales_shipment_id_01.shipment_id) AS COUNT_InventoryShipment_InventorySales_shipment_id_01_shipment_id',
          ],
          'orderBy' => [],
          'where' => [],
          'groupBy' => [
            'id',
          ],
          'join' => [
            [
              'InventorySales AS InventoryShipment_InventorySales_shipment_id_01',
              'LEFT',
              [
                'id',
                '=',
                'InventoryShipment_InventorySales_shipment_id_01.shipment_id',
              ],
            ],
          ],
          "having" => [],
        ],
      ],
      'match' => [
        'name',
      ],
    ],
  ],

  // Search Display for Inventory_Shipment_Table_1.
  [
    'name' => 'SearchDisplay_Inventory_Shipment_Table_1',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Shipment_Table_1',
        'label' => E::ts('Inventory Shipment Table 1'),
        'saved_search_id.name' => 'Inventory_Shipment',
        'type' => 'table',
        'settings' => [
          'description' => NULL,
          'sort' => [
            [
              'created_at',
              'DESC',
            ],
          ],
          'limit' => 50,
          'pager' => [],
          'placeholder' => 5,
          'columns' => [
            [
              'type' => 'html',
              'key' => 'is_finished',
              'dataType' => 'Boolean',
              'label' => '',
              'sortable' => TRUE,
              'rewrite' => "{capture assign=is_finished}{\"[is_finished]\"}{/capture}\n{capture assign=is_shipped}{\"[is_shipped]\"}{/capture}\n{if \$is_finished == 'Yes'}\n<span class=\"badge badge-success\">Closed</span>\n{else}\n<span class=\"badge badge-dark\">Open</span>\n{/if}\n{if \$is_shipped == 'Yes'}\n<span class=\"badge badge-success\">Shipped</span>\n{else}\n<span class=\"badge badge-dark\">Pending</span>\n{/if}",
            ],
            [
              'type' => 'html',
              'key' => 'id',
              'dataType' => 'Integer',
              'label' => E::ts('ID'),
              'sortable' => TRUE,
              'rewrite' => '<a target="_blank" href="/civicrm/inventory/shipment-details?id=[id]#?shipment_id=[id]">Shipment [id]</a>',
            ],
            [
              'type' => 'field',
              'key' => 'created_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Created Date'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'shipped_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Shipped At'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'COUNT_InventoryShipment_InventorySales_shipment_id_01_shipment_id',
              'dataType' => 'Integer',
              'label' => E::ts('Orders'),
              'sortable' => TRUE,
            ],
          ],
          'actions' => FALSE,
          'classes' => [
            'table',
            'table-striped',
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],


  // Saved Search for Inventory_Product_Variant_Unassigned_List.
  [
    'name' => 'SavedSearch_Inventory_Product_Variant_Unassigned_List',
    'entity' => 'SavedSearch',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Variant_Unassigned_List',
        'label' => E::ts('Inventory Product Variant Unassigned List'),
        'api_entity' => 'InventoryProductVariant',
        'api_params' => [
          'version' => 4,
          'select' => [
            'id',
            'is_active',
            'created_at',
            'product_variant_unique_id',
            'product_variant_phone_number',
            'is_discontinued',
            'is_primary',
            'is_problem',
            'is_replaced',
            'is_suspended',
            'product_id',
            'product_id.label',
            'status:label',
            'row',
            'shelf:label',
            'warranty_start_date',
            'warranty_end_date',
          ],
          'orderBy' => [],
          'where' => [
            [
              'contact_id',
              'IS EMPTY',
              '',
              NULL,
            ],
            [
              'is_problem',
              '=',
              FALSE,
            ],
            [
              'sales_id',
              'IS EMPTY',
            ],
            [
              'membership_id',
              'IS EMPTY',
            ],
            [
              'status:name',
              '=',
              'new_inventory',
            ],
          ],
          'groupBy' => [],
          'join' => [],
          "having" => [],
        ],
      ],
      'match' => [
        'name',
      ],
    ],
  ],

  // Search Display for Inventory_Product_Variant_Unassigned_List_Table_1.
  [
    'name' => 'SearchDisplay_Inventory_Product_Variant_Unassigned_List_Table_1',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Variant_Unassigned_List_Table_1',
        'label' => E::ts('Inventory Product Variant Unassigned List Table 1'),
        'saved_search_id.name' => 'Inventory_Product_Variant_Unassigned_List',
        'type' => 'table',
        'settings' => [
          'description' => NULL,
          'sort' => [],
          'limit' => 50,
          'pager' => [],
          'placeholder' => 5,
          'columns' => [
            [
              'type' => 'field',
              'key' => 'product_variant_unique_id',
              'dataType' => 'String',
              'label' => E::ts('Identifier'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'product_variant_phone_number',
              'dataType' => 'String',
              'label' => E::ts('Phone Number'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'is_active',
              'dataType' => 'Boolean',
              'label' => E::ts('Is Active'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'created_at',
              'dataType' => 'Timestamp',
              'label' => E::ts('Created Date'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'is_primary',
              'dataType' => 'Boolean',
              'label' => E::ts('Is Primary Device'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'is_problem',
              'dataType' => 'Boolean',
              'label' => E::ts('Is Problem'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'is_replaced',
              'dataType' => 'Boolean',
              'label' => E::ts('Is Replaced'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'is_suspended',
              'dataType' => 'Boolean',
              'label' => E::ts('Is Suspended'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'product_id.label',
              'dataType' => 'String',
              'label' => E::ts('Product Label'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'status:label',
              'dataType' => 'String',
              'label' => E::ts('Product Status'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'row',
              'dataType' => 'String',
              'label' => E::ts('Row in Warehouse'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'shelf:label',
              'dataType' => 'String',
              'label' => E::ts('Warehouse shelf'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'warranty_start_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Warranty start on'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'warranty_end_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Warranty end on'),
              'sortable' => TRUE,
            ],
          ],
          'actions' => FALSE,
          'classes' => [
            'table',
            'table-striped',
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],

  // Saved Search for Inventory_Product_Variant_linked_record.
  [
    'name' => 'SavedSearch_Inventory_Product_Variant_linked_record',
    'entity' => 'SavedSearch',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Variant_linked_record',
        'label' => E::ts('Inventory Product Variant linked record'),
        'api_entity' => 'InventoryProductVariant',
        'api_params' => [
          'version' => 4,
          'select' => [
            'id',
            'is_active',
            'InventoryProductVariant_InventoryProduct_product_id_01.label',
            'InventoryProductVariant_Membership_membership_id_01.contact_id.sort_name',
            'membership_id',
            'InventoryProductVariant_InventorySales_sales_id_01.code',
            'DATE(InventoryProductVariant_InventorySales_sales_id_01.sale_date) AS DATE_InventoryProductVariant_InventorySales_sales_id_01_sale_date',
            'InventoryProductVariant_InventorySales_sales_id_01.is_shipping_required',
            'InventoryProductVariant_InventorySales_sales_id_01.status_id:label',
            'product_variant_unique_id',
            'is_suspended',
            'is_primary',
            'InventoryProductVariant_Membership_membership_id_01_Membership_MembershipType_membership_type_id_01.name',
            'InventoryProductVariant_Membership_membership_id_01_Membership_MembershipStatus_status_id_01.is_current_member',
            'InventoryProductVariant_Membership_membership_id_01_Membership_MembershipStatus_status_id_01.name',
            'InventoryProductVariant_Membership_membership_id_01_Membership_MembershipStatus_status_id_01.label',
            'InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.shipped_date',
            'InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.is_shipped',
          ],
          'orderBy' => [],
          'where' => [
            [
              'contact_id',
              'IS NOT EMPTY',
            ],
          ],
          'groupBy' => [],
          'join' => [
            [
              'InventoryProduct AS InventoryProductVariant_InventoryProduct_product_id_01',
              'LEFT',
              [
                'product_id',
                '=',
                'InventoryProductVariant_InventoryProduct_product_id_01.id',
              ],
            ],
            [
              'InventorySales AS InventoryProductVariant_InventorySales_sales_id_01',
              'LEFT',
              [
                'sales_id',
                '=',
                'InventoryProductVariant_InventorySales_sales_id_01.id',
              ],
            ],
            [
              'Membership AS InventoryProductVariant_Membership_membership_id_01',
              'LEFT',
              [
                'membership_id',
                '=',
                'InventoryProductVariant_Membership_membership_id_01.id',
              ],
            ],
            [
              'MembershipType AS InventoryProductVariant_Membership_membership_id_01_Membership_MembershipType_membership_type_id_01',
              'LEFT',
              [
                'InventoryProductVariant_Membership_membership_id_01.membership_type_id',
                '=',
                'InventoryProductVariant_Membership_membership_id_01_Membership_MembershipType_membership_type_id_01.id',
              ],
            ],
            [
              'MembershipStatus AS InventoryProductVariant_Membership_membership_id_01_Membership_MembershipStatus_status_id_01',
              'LEFT',
              [
                'InventoryProductVariant_Membership_membership_id_01.status_id',
                '=',
                'InventoryProductVariant_Membership_membership_id_01_Membership_MembershipStatus_status_id_01.id',
              ],
            ],
            [
              'InventoryShipment AS InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01',
              'LEFT',
              [
                'InventoryProductVariant_InventorySales_sales_id_01.shipment_id',
                '=',
                'InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.id',
              ],
            ],
          ],
          "having" => [],
        ],
      ],
      'match' => [
        'name',
      ],
    ],
  ],

  // Search Display for Inventory_Product_Variant_linked_record_Table_1.
  [
    'name' => 'SearchDisplay_Inventory_Product_Variant_linked_record_Table_1',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Variant_linked_record_Table_1',
        'label' => E::ts('Inventory Product Variant linked record Table 1'),
        'saved_search_id.name' => 'Inventory_Product_Variant_linked_record',
        'type' => 'table',
        'settings' => [
          'description' => NULL,
          'sort' => [
            [
              'DATE_InventoryProductVariant_InventorySales_sales_id_01_sale_date',
              'DESC',
            ],
          ],
          'limit' => 50,
          'pager' => [],
          'placeholder' => 5,
          'columns' => [
            [
              'type' => 'html',
              'key' => 'InventoryProductVariant_Membership_membership_id_01_Membership_MembershipType_membership_type_id_01.name',
              'dataType' => 'String',
              'label' => E::ts('Membership'),
              'sortable' => TRUE,
              'rewrite' => "{capture assign=is_current_member}{\"[InventoryProductVariant_Membership_membership_id_01_Membership_MembershipStatus_status_id_01.is_current_member]\"}{/capture}\n[InventoryProductVariant_Membership_membership_id_01_Membership_MembershipType_membership_type_id_01.name] \n<br/>\n{if \$is_current_member == 'Yes'}\n<span class=\"badge badge-success\">[InventoryProductVariant_Membership_membership_id_01_Membership_MembershipStatus_status_id_01.name]</span>\n{else}\n<span class=\"badge badge-warning\">[InventoryProductVariant_Membership_membership_id_01_Membership_MembershipStatus_status_id_01.name]</span>\n{/if}",
            ],
            [
              'type' => 'field',
              'key' => 'InventoryProductVariant_InventoryProduct_product_id_01.label',
              'dataType' => 'String',
              'label' => E::ts('Device'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'html',
              'key' => 'product_variant_unique_id',
              'dataType' => 'String',
              'label' => E::ts('Identifier (IMEI/MEID)'),
              'sortable' => TRUE,
              'rewrite' => "<a target=\"crm-popup\" class=\"crm-popup\" href=\"/civicrm/inventory/device-from#?InventoryProductVariant1=[id]\">[product_variant_unique_id]</a> <br/>\n{capture assign=is_active}{\"[is_active]\"}{/capture}\n{capture assign=is_problem}{\"[is_problem]\"}{/capture}\n{capture assign=is_suspended}{\"[is_suspended]\"}{/capture}\n{capture assign=is_primary}{\"[is_primary]\"}{/capture}\n{capture assign=is_replaced}{\"[is_replaced]\"}{/capture}\n{capture assign=is_discontinued}{\"[is_discontinued]\"}{/capture}\n{if \$is_primary == 'Yes'}\n<span class=\"badge badge-dark\">primary</span>\n{/if}\n{if \$is_active == 'Yes'}\n<span class=\"badge badge-success\">active</span>\n{/if}\n{if \$is_problem == 'Yes'}\n<span class=\"badge badge-danger\">problem</span>\n{/if}\n{if \$is_suspended == 'Yes'}\n<span class=\"badge badge-warning\">suspended</span>\n{/if}\n{if \$is_replaced == 'Yes'}\n<span class=\"badge badge-dark\">replaced</span>\n{/if}",
            ],
            [
              'type' => 'field',
              'key' => 'InventoryProductVariant_Membership_membership_id_01.contact_id.sort_name',
              'dataType' => 'String',
              'label' => E::ts('Contact Name'),
              'sortable' => TRUE,
              'link' => [
                'path' => '',
                'entity' => 'Contact',
                'action' => 'view',
                'join' => 'InventoryProductVariant_Membership_membership_id_01.contact_id',
                'target' => '_blank',
              ],
              'title' => E::ts('View Contact'),
            ],
            [
              'type' => 'html',
              'key' => 'InventoryProductVariant_InventorySales_sales_id_01.code',
              'dataType' => 'String',
              'label' => E::ts('Order'),
              'sortable' => TRUE,
              'rewrite' => "<a target=\"crm-popup\" class=\"crm-popup\" href=\"/civicrm/inventory/sale-lineitems?code=[InventoryProductVariant_InventorySales_sales_id_01.code]\">[InventoryProductVariant_InventorySales_sales_id_01.code] </a> <br/>\n<br/>\n{capture assign=is_paid}{\"[InventoryProductVariant_InventorySales_sales_id_01.is_paid]\"}{/capture}\n{capture assign=is_shipped}{\"[InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.is_shipped]\"}{/capture}\n{if \$is_paid == 'Yes'}\n<span class=\"badge badge-success\">paid</span>\n{else}\n<span class=\"badge badge-warning\">un-paid</span>\n{/if}\n{if \$is_shipped == 'Yes'}\n<span class=\"badge badge-success\">Shipped</span> <br/>\n[InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.shipped_date] <br/>\n{else}\n<span class=\"badge badge-warning\">Not Shipped</span>\n{/if}\n\n{capture assign=shipment_id}{\"[InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.id]\"}{/capture}\n{if \$shipment_id}\n<br/>\n<a target=\"_blank\" href=\"/civicrm/inventory/shipment-details?id=[InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.id]#?shipment_id=[InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.id]\">Shipment</a>\n{/if}",
            ],
            [
              'type' => 'field',
              'key' => 'DATE_InventoryProductVariant_InventorySales_sales_id_01_sale_date',
              'dataType' => 'Date',
              'label' => E::ts('Sale Date'),
              'sortable' => TRUE,
            ],
            [
              'text' => '',
              'style' => 'default',
              'size' => 'btn-xs',
              'icon' => 'fa-bars',
              'links' => [
                [
                  'path' => '/civicrm/inventory/device-from#?InventoryProductVariant1=[id]',
                  'icon' => 'fa-external-link',
                  'text' => E::ts('Edit'),
                  'style' => 'default',
                  'condition' => [],
                  'task' => '',
                  'entity' => '',
                  'action' => '',
                  'join' => '',
                  'target' => 'crm-popup',
                ],
                [
                  'entity' => 'Contact',
                  'action' => 'view',
                  'join' => 'InventoryProductVariant_Membership_membership_id_01.contact_id',
                  'target' => '',
                  'icon' => 'fa-external-link',
                  'text' => E::ts('View Contact'),
                  'style' => 'default',
                  'path' => '',
                  'task' => '',
                  'condition' => [],
                ],
                [
                  'entity' => 'Contact',
                  'action' => 'update',
                  'join' => 'InventoryProductVariant_Membership_membership_id_01.contact_id',
                  'target' => '',
                  'icon' => 'fa-pencil',
                  'text' => E::ts('Update Contact'),
                  'style' => 'default',
                  'path' => '',
                  'task' => '',
                  'condition' => [],
                ],
              ],
              'type' => 'menu',
              'alignment' => 'text-right',
            ],
          ],
          'actions' => FALSE,
          'classes' => [
            'table',
            'table-striped',
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],

  // Search Display for Inventory_Product_Variant_linked_record_Table_2.
  [
    'name' => 'SearchDisplay_Inventory_Product_Variant_linked_record_Table_2',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Product_Variant_linked_record_Table_2',
        'label' => E::ts('Inventory Product Variant linked record Table 2'),
        'saved_search_id.name' => 'Inventory_Product_Variant_linked_record',
        'type' => 'table',
        'settings' => [
          'description' => NULL,
          'sort' => [
            [
              'DATE_InventoryProductVariant_InventorySales_sales_id_01_sale_date',
              'DESC',
            ],
          ],
          'limit' => 50,
          'pager' => [],
          'placeholder' => 5,
          'columns' => [
            [
              'type' => 'html',
              'key' => 'InventoryProductVariant_Membership_membership_id_01_Membership_MembershipType_membership_type_id_01.name',
              'dataType' => 'String',
              'label' => E::ts('Membership'),
              'sortable' => TRUE,
              'rewrite' => "{capture assign=is_current_member}{\"[InventoryProductVariant_Membership_membership_id_01_Membership_MembershipStatus_status_id_01.is_current_member]\"}{/capture}\n[InventoryProductVariant_Membership_membership_id_01_Membership_MembershipType_membership_type_id_01.name] \n<br/>\n{if \$is_current_member == 'Yes'}\n<span class=\"badge badge-success\">[InventoryProductVariant_Membership_membership_id_01_Membership_MembershipStatus_status_id_01.name]</span>\n{else}\n<span class=\"badge badge-warning\">[InventoryProductVariant_Membership_membership_id_01_Membership_MembershipStatus_status_id_01.name]</span>\n{/if}",
            ],
            [
              'type' => 'field',
              'key' => 'InventoryProductVariant_InventoryProduct_product_id_01.label',
              'dataType' => 'String',
              'label' => E::ts('Device'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'html',
              'key' => 'product_variant_unique_id',
              'dataType' => 'String',
              'label' => E::ts('Identifier (IMEI/MEID)'),
              'sortable' => TRUE,
              'rewrite' => "<a target=\"crm-popup\" class=\"crm-popup\" href=\"/civicrm/inventory/device-from#?InventoryProductVariant1=[id]\">[product_variant_unique_id]</a> <br/>\n{capture assign=is_active}{\"[is_active]\"}{/capture}\n{capture assign=is_problem}{\"[is_problem]\"}{/capture}\n{capture assign=is_suspended}{\"[is_suspended]\"}{/capture}\n{capture assign=is_primary}{\"[is_primary]\"}{/capture}\n{capture assign=is_replaced}{\"[is_replaced]\"}{/capture}\n{capture assign=is_discontinued}{\"[is_discontinued]\"}{/capture}\n{if \$is_primary == 'Yes'}\n<span class=\"badge badge-dark\">primary</span>\n{/if}\n{if \$is_active == 'Yes'}\n<span class=\"badge badge-success\">active</span>\n{/if}\n{if \$is_problem == 'Yes'}\n<span class=\"badge badge-danger\">problem</span>\n{/if}\n{if \$is_suspended == 'Yes'}\n<span class=\"badge badge-warning\">suspended</span>\n{/if}\n{if \$is_replaced == 'Yes'}\n<span class=\"badge badge-dark\">replaced</span>\n{/if}",
            ],
            [
              'type' => 'html',
              'key' => 'InventoryProductVariant_InventorySales_sales_id_01.code',
              'dataType' => 'String',
              'label' => E::ts('Order'),
              'sortable' => TRUE,
              'rewrite' => "<a target=\"crm-popup\" class=\"crm-popup\" href=\"/civicrm/inventory/sale-lineitems?code=[InventoryProductVariant_InventorySales_sales_id_01.code]\">[InventoryProductVariant_InventorySales_sales_id_01.code] </a> <br/>\n<br/>\n{capture assign=is_paid}{\"[InventoryProductVariant_InventorySales_sales_id_01.is_paid]\"}{/capture}\n{capture assign=is_shipped}{\"[InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.is_shipped]\"}{/capture}\n{if \$is_paid == 'Yes'}\n<span class=\"badge badge-success\">paid</span>\n{else}\n<span class=\"badge badge-warning\">un-paid</span>\n{/if}\n{if \$is_shipped == 'Yes'}\n<span class=\"badge badge-success\">Shipped</span> <br/>\n[InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.shipped_date] <br/>\n{else}\n<span class=\"badge badge-warning\">Not Shipped</span>\n{/if}\n{capture assign=shipment_id}{\"[InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.id]\"}{/capture}\n{if \$shipment_id}\n<br/>\n<a target=\"_blank\" href=\"/civicrm/inventory/shipment-details?id=[InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.id]#?shipment_id=[InventoryProductVariant_InventorySales_sales_id_01_InventorySales_InventoryShipment_shipment_id_01.id]\">Shipment</a>\n{/if}",
            ],
            [
              'type' => 'field',
              'key' => 'DATE_InventoryProductVariant_InventorySales_sales_id_01_sale_date',
              'dataType' => 'Date',
              'label' => E::ts('Sale Date'),
              'sortable' => TRUE,
            ],
            [
              'text' => '',
              'style' => 'default',
              'size' => 'btn-xs',
              'icon' => 'fa-bars',
              'links' => [
                [
                  'path' => '/civicrm/inventory/device-from#?InventoryProductVariant1=[id]',
                  'icon' => 'fa-external-link',
                  'text' => E::ts('Edit'),
                  'style' => 'default',
                  'condition' => [],
                  'task' => '',
                  'entity' => '',
                  'action' => '',
                  'join' => '',
                  'target' => 'crm-popup',
                ],
                [
                  'entity' => 'Contact',
                  'action' => 'view',
                  'join' => 'InventoryProductVariant_Membership_membership_id_01.contact_id',
                  'target' => '',
                  'icon' => 'fa-external-link',
                  'text' => E::ts('View Contact'),
                  'style' => 'default',
                  'path' => '',
                  'task' => '',
                  'condition' => [],
                ],
                [
                  'entity' => 'Contact',
                  'action' => 'update',
                  'join' => 'InventoryProductVariant_Membership_membership_id_01.contact_id',
                  'target' => '',
                  'icon' => 'fa-pencil',
                  'text' => E::ts('Update Contact'),
                  'style' => 'default',
                  'path' => '',
                  'task' => '',
                  'condition' => [],
                ],
              ],
              'type' => 'menu',
              'alignment' => 'text-right',
            ],
          ],
          'actions' => FALSE,
          'classes' => [
            'table',
            'table-striped',
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],

  // Saved Search for Inventory_Sales_New_Orders.
  [
    'name' => 'SavedSearch_Inventory_Sales_New_Orders',
    'entity' => 'SavedSearch',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Sales_New_Orders',
        'label' => E::ts('Inventory Sales : New Orders'),
        'api_entity' => 'InventorySales',
        'api_params' => [
          'version' => 4,
          'select' => [
            'id',
            'is_active',
            'InventorySales_InventoryProduct_product_id_01.label',
            'InventorySales_Contribution_contribution_id_01.contact_id.sort_name',
            'InventorySales_Contribution_contribution_id_01.total_amount',
            'is_paid',
            'has_assignment',
            'is_shipping_required',
            'needs_assignment',
            'code',
            'status_id:label',
            'sale_date',
          ],
          'orderBy' => [],
          'where' => [],
          'groupBy' => [],
          'join' => [
            [
              'InventoryProduct AS InventorySales_InventoryProduct_product_id_01',
              'LEFT',
              [
                'product_id',
                '=',
                'InventorySales_InventoryProduct_product_id_01.id',
              ],
            ],
            [
              'Contribution AS InventorySales_Contribution_contribution_id_01',
              'LEFT',
              [
                'contribution_id',
                '=',
                'InventorySales_Contribution_contribution_id_01.id',
              ],
            ],
            [
              'Contact AS InventorySales_Contact_contact_id_01',
              'LEFT',
              [
                'contact_id',
                '=',
                'InventorySales_Contact_contact_id_01.id',
              ],
            ],
            [
              'InventoryShipment AS InventorySales_InventoryShipment_shipment_id_01',
              'LEFT',
              [
                'shipment_id',
                '=',
                'InventorySales_InventoryShipment_shipment_id_01.id',
              ],
            ],
            [
              'InventoryShipmentLabels AS InventorySales_InventoryShipmentLabels_sales_id_01',
              'LEFT',
              [
                'id',
                '=',
                'InventorySales_InventoryShipmentLabels_sales_id_01.sales_id',
              ],
            ],
            [
              'InventoryProductVariant AS InventorySales_InventoryProductVariant_sales_id_01',
              'LEFT',
              [
                'id',
                '=',
                'InventorySales_InventoryProductVariant_sales_id_01.sales_id',
              ],
              [
                'InventorySales_InventoryProductVariant_sales_id_01.id',
                'IS EMPTY',
              ],
            ],
          ],
          "having" => [],
        ],
      ],
      'match' => [
        'name',
      ],
    ],
  ],

  // Search Display for Inventory_Sales_New_Orders_Table_1.
  [
    'name' => 'SearchDisplay_Inventory_Sales_New_Orders_Table_1',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Sales_New_Orders_Table_1',
        'label' => E::ts('Inventory Sales : New Orders Table 1'),
        'saved_search_id.name' => 'Inventory_Sales_New_Orders',
        'type' => 'table',
        'settings' => [
          'description' => NULL,
          'sort' => [
            [
              'sale_date',
              'DESC',
            ],
          ],
          'limit' => 50,
          'pager' => [],
          'placeholder' => 5,
          'columns' => [
            [
              'type' => 'field',
              'key' => 'InventorySales_InventoryProduct_product_id_01.label',
              'dataType' => 'String',
              'label' => E::ts('Model'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'InventorySales_Contribution_contribution_id_01.contact_id.sort_name',
              'dataType' => 'String',
              'label' => E::ts('Contact Name'),
              'sortable' => TRUE,
              'link' => [
                'path' => '',
                'entity' => 'Contact',
                'action' => 'view',
                'join' => 'InventorySales_Contribution_contribution_id_01.contact_id',
                'target' => '_blank',
              ],
              'title' => E::ts('View Contact'),
            ],
            [
              'type' => 'html',
              'key' => 'InventorySales_Contribution_contribution_id_01.total_amount',
              'dataType' => 'Money',
              'label' => E::ts('Paid Amount'),
              'sortable' => TRUE,
              'rewrite' => "[InventorySales_Contribution_contribution_id_01.total_amount]<br/>\n{capture assign=is_paid}{\"[is_paid]\"}{/capture}\n{if \$is_paid == 'Yes'}\n<span class=\"badge badge-success\">paid</span>\n{else}\n<span class=\"badge badge-dark\">un-paid</span>\n{/if}",
            ],
            [
              'type' => 'html',
              'key' => 'code',
              'dataType' => 'String',
              'label' => E::ts('Order ID'),
              'sortable' => TRUE,
              'rewrite' => '<a target="crm-popup" class="crm-popup" href="/civicrm/inventory/sale-lineitems?code=[code]">[code] </a> <br/>
<br/>
{capture assign=shipment_id}{"[shipment_id]"}{/capture}
<br/>
{if $shipment_id}
<a target="_blank" href="/civicrm/inventory/shipment-details?id=[shipment_id]#?shipment_id=[shipment_id]">Shipment [shipment_id]</a>
{/if}',
            ],
            [
              'type' => 'field',
              'key' => 'status_id:label',
              'dataType' => 'String',
              'label' => E::ts('Order Status'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'sale_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Order Date'),
              'sortable' => TRUE,
            ],
          ],
          'actions' => FALSE,
          'classes' => [
            'table',
            'table-striped',
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],

  //
  // Saved Search for Inventory_Referrals.
  [
    'name' => 'SavedSearch_Inventory_Referrals',
    'entity' => 'SavedSearch',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Referrals',
        'label' => E::ts('Inventory Referrals'),
        'api_entity' => 'InventoryReferrals',
        'api_params' => [
          'version' => 4,
          'select' => [
            'id',
            'consumer_id',
            'creator_id',
            'created_date',
            'before_end_date',
            'after_end_date',
            'referral_code',
            'InventoryReferrals_Membership_creator_id_01.contact_id.sort_name',
            'InventoryReferrals_Membership_consumer_id_01.contact_id.sort_name',
          ],
          'orderBy' => [],
          'where' => [],
          'groupBy' => [],
          'join' => [
            [
              'Membership AS InventoryReferrals_Membership_creator_id_01',
              'INNER',
              [
                'creator_id',
                '=',
                'InventoryReferrals_Membership_creator_id_01.id',
              ],
            ],
            [
              'Membership AS InventoryReferrals_Membership_consumer_id_01',
              'INNER',
              [
                'consumer_id',
                '=',
                'InventoryReferrals_Membership_consumer_id_01.id',
              ],
            ],
          ],
          "having" => [],
        ],
      ],
      'match' => [
        'name',
      ],
    ],
  ],

  // Search Display for Inventory_Referrals_Table_1.
  [
    'name' => 'SearchDisplay_Inventory_Referrals_Table_1',
    'entity' => 'SearchDisplay',
    'cleanup' => 'always',
    'update' => 'unmodified',
    'params' => [
      'version' => 4,
      'values' => [
        'name' => 'Inventory_Referrals_Table_1',
        'label' => E::ts('Inventory Referrals Table 1'),
        'saved_search_id.name' => 'Inventory_Referrals',
        'type' => 'table',
        'settings' => [
          'description' => NULL,
          'sort' => [
            [
              'sale_date',
              'DESC',
            ],
          ],
          'limit' => 50,
          'pager' => [],
          'placeholder' => 5,
          'columns' => [
            [
              'type' => 'field',
              'key' => 'InventoryReferrals_Membership_creator_id_01.contact_id.sort_name',
              'dataType' => 'String',
              'label' => E::ts('Created Membership'),
              'sortable' => TRUE,
              'link' => [
                'path' => '',
                'entity' => 'Contact',
                'action' => 'view',
                'join' => 'InventoryReferrals_Membership_creator_id_01.contact_id',
                'target' => '',
              ],
              'title' => E::ts('View Contact'),
            ],
            [
              'type' => 'field',
              'key' => 'InventoryReferrals_Membership_consumer_id_01.contact_id.sort_name',
              'dataType' => 'String',
              'label' => E::ts('Consumer Membership'),
              'sortable' => TRUE,
              'link' => [
                'path' => '',
                'entity' => 'Contact',
                'action' => 'view',
                'join' => 'InventoryReferrals_Membership_consumer_id_01.contact_id',
                'target' => '',
              ],
              'title' => E::ts('View Contact'),
            ],
            [
              'type' => 'field',
              'key' => 'created_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Created Date'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'before_end_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('Before End Date'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'after_end_date',
              'dataType' => 'Timestamp',
              'label' => E::ts('After End Date'),
              'sortable' => TRUE,
            ],
            [
              'type' => 'field',
              'key' => 'referral_code',
              'dataType' => 'String',
              'label' => E::ts('Referral Code'),
              'sortable' => TRUE,
            ],
          ],
          'actions' => TRUE,
          'classes' => [
            'table',
            'table-striped',
            'crm-sticky-header',
          ],
          'headerCount' => TRUE,
        ],
        'acl_bypass' => FALSE,
      ],
    ],
  ],
];
